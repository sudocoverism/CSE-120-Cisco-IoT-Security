# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'home.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os
import requests
import subprocess
import urllib.request as urllib
import pyzbar
import cv2
import numpy
from pyzbar.pyzbar import decode
#from pillow import image
from PyQt5.QtWidgets import  QWidget, QLabel, QApplication
from PyQt5.QtCore import QThread, Qt, pyqtSignal, pyqtSlot
from PyQt5.QtGui import QImage, QPixmap


class Thread(QThread):
    changePixmap = pyqtSignal(QImage)

    def run(self):
        cap = cv2.VideoCapture(0)
        while True:
            ret, frame = cap.read()
            if ret:
                rgbImage = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                h, w, ch = rgbImage.shape
                bytesPerLine = ch * w
                convertToQtFormat = QImage(rgbImage.data, w, h, bytesPerLine, QImage.Format_RGB888)
                p = convertToQtFormat.scaled(640, 480, Qt.KeepAspectRatio)
                self.changePixmap.emit(p)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(320, 480)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.buttonAddPeer = QtWidgets.QPushButton(self.centralwidget)
        self.buttonAddPeer.setGeometry(QtCore.QRect(80, 360, 160, 60))
        self.buttonAddPeer.setObjectName("buttonAddPeer")
        self.buttonAddPeer.clicked.connect(self.addPeer)

        self.buttonPower = QtWidgets.QPushButton(self.centralwidget)
        self.buttonPower.setGeometry(QtCore.QRect(80, 240, 160, 60))
        self.buttonPower.setObjectName("buttonPower")
        self.buttonPower.clicked.connect(self.power)

        self.buttonInstall = QtWidgets.QPushButton(self.centralwidget)
        self.buttonInstall.setGeometry(QtCore.QRect(80, 180, 160, 60))
        self.buttonInstall.setObjectName("buttonInstall")
        self.buttonInstall.clicked.connect(self.installDependencies)

        self.photo = QtWidgets.QLabel(self.centralwidget)
        self.photo.setGeometry(QtCore.QRect(48, 40, 111, 111))
        self.photo.setText("")
        self.photo.setPixmap(QtGui.QPixmap("scripts/publicKey.png"))
        self.photo.setObjectName("photo")

        self.photo1 = QtWidgets.QLabel(self.centralwidget)
        self.photo1.setGeometry(QtCore.QRect(148, 40, 111, 111))
        self.photo1.setText("")
        self.photo1.setPixmap(QtGui.QPixmap("scripts/ipAddrKey.png"))
        self.photo1.setObjectName("photo1")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 320, 22))
        self.menubar.setObjectName("menubar")
        self.menufdsa = QtWidgets.QMenu(self.menubar)
        self.menufdsa.setObjectName("menufdsa")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionVPN = QtWidgets.QAction(MainWindow)
        self.actionVPN.setObjectName("actionVPN")
        self.menufdsa.addAction(self.actionVPN)
        self.menubar.addAction(self.menufdsa.menuAction())

        MainWindow.showFullScreen()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.buttonAddPeer.setText(_translate("MainWindow", "Add Peer"))
        self.buttonShowKeys.setText(_translate("MainWindow", "Show Keys"))
        self.buttonPower.setText(_translate("MainWindow", "Power"))
        self.buttonInstall.setText(_translate("MainWindow", "Install"))
        self.menufdsa.setTitle(_translate("MainWindow", "VPN"))
        self.actionVPN.setText(_translate("MainWindow", "VPN"))

    def addPeer(self):
        self.Thread()
        pyzbar.decoder(rgbImage)
        subprocess.run('./scripts/wgPeerConnection.sh', shell=True)



    def showKeys(self):
        self.photo.setPixmap(QtGui.QPixmap("scripts/publicKey.png"))
        self.photo1.setPixmap(QtGui.QPixmap("scripts/ipAddr.png"))

    def getDependencies():
        folder = os.path.exists('./scripts')
        if folder:
            pass
        else:
            os.mkdir('scripts')

            print('Downloading Required Files')
            filename = 'dependencyInstall.sh'
            filepath = os.path.join('./scripts', filename)
            urllib.urlretrieve('https://drive.google.com/uc?export=download&id=1l9AMbUfJn7RuX3P_0MMxeeHA9G3iJwbK', filepath)
            filename = 'dependencyUninstall.sh'
            filepath = os.path.join('./scripts', filename)
            urllib.urlretrieve('https://drive.google.com/uc?export=download&id=1kNVrMK2UdWAi-eMdZpLqNi6PglcjWTUr', filepath)
            filename = 'ipQRCode.sh'
            filepath = os.path.join('./scripts', filename)
            urllib.urlretrieve('https://drive.google.com/uc?export=download&id=1IPpMy5ptlpkpRGW8dorVQ-oUJuZrB9Es', filepath)
            filename = 'publicKeyQRCode.sh'
            filepath = os.path.join('./scripts', filename)
            urllib.urlretrieve('https://drive.google.com/uc?export=download&id=12JkJQTZJILfdHG10bdhlEVvBOex4wuUw', filepath)
            filename = 'wgInterfaceConfig.sh'
            filepath = os.path.join('./scripts', filename)
            urllib.urlretrieve('https://drive.google.com/uc?export=download&id=159pOfS93tiRksBAb_7pAcGMTazMm8Cry', filepath)
            filename = 'wgPeerConnection.sh'
            filepath = os.path.join('./scripts', filename)
            urllib.urlretrieve('https://drive.google.com/uc?export=download&id=1x-tSWFdHkhM3SYHnjjHnaVejKpzrVWAV', filepath)
            print('Finished Downloading')

    def installDependencies(self):
        self.getDependencies()
        os.path.join('./scripts')
        subprocess.run('./scripts/dependencyInstall.sh', shell=True)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
